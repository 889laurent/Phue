#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

// Show usage if host and username not passed
if (!isset($argv[1], $argv[2])) {
    echo "Philips Hue Light Lister", "\n\n",
         "Usage:", "\n",
         "  <host> <username>", "\n\n";
    exit(1);
}

// Initialize client
$client = new \Phue\Client($argv[1], $argv[2]);

// Hash username if doesn't appear to be hash
if ($client->getUsername() != $argv[2]) {
    echo "! - Username {$argv[2]} doesn't appear to be 32 character hash (A-F, 0-9)", "\n",
         "! - Using this for username instead: {$client->getUsername()}", "\n\n"; 
}

echo "Testing connection to bridge at {$client->getHost()}", "\n";

try {
    $client->sendCommand(
        new \Phue\Command\Ping
    );
} catch (\Phue\Transport\Exception\ConnectionException $e) {
    echo "Issue connecting to bridge", "\n";

    exit(1);
} catch (\Phue\Transport\Exception\BridgeException $e) {
    echo "Response appears OK!", "\n\n";
}

// Quit if user is not authenticated
if (!$client->sendCommand(new \Phue\Command\IsAuthorized)) {
    echo "{$client->getUsername()} is not authenticated with the bridge. Aborting.", "\n\n";

    exit(1);
}

// Get list of lights 
$lights = $client->sendCommand(
    new \Phue\Command\GetLights
);

echo "List of lights:", "\n";

foreach ($lights as $light) {
    echo "\t", "#{$light->getId()} - ", $light->isOn() ? 'On' : 'Off',
         " - {$light->getName()}", "\n";
}


$client->sendCommand(
	(new \Phue\Command\SetGroupAction(0))->brightness(254)->on(true)->hue(50000)->saturation(255)
);
