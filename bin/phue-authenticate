#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

// Show usage if host and username not passed
if (!isset($argv[1], $argv[2])) {
    echo "Philips Hue Authenticator", "\n\n",
         "Usage:", "\n",
         "  <host> <username>", "\n\n";
    exit(1);
}

// Initialize client
$client = new \Phue\Client($argv[1], $argv[2]);

// Hash username if doesn't appear to be hash
if ($client->getUsername() != $argv[2]) {
    echo "! - Username {$argv[2]} doesn't appear to be 32 character hash (A-F, 0-9)", "\n",
         "! - Using this for username instead: {$client->getUsername()}", "\n\n"; 
}

echo "Testing connection to bridge at {$client->getHost()}", "\n";

try {
    $client->sendCommand(
        new \Phue\Command\Ping()
    );
} catch (\Phue\Transport\Exception\ConnectionException $e) {
    echo "Issue connecting to bridge", "\n";

    exit(1);
} catch (\Phue\Transport\Exception\BridgeException $e) {
    echo "Response appears OK!", "\n\n";
}

echo "Attempting to authenticate ({$client->getUsername()}):", "\n",
     "Press the Bridge's button!", "\n",
     "Waiting.";

// Try X times to authenticate
$maxTries = 30;
for ($i = 1; $i <= $maxTries; ++$i) {
    try {
        $response = $client->sendCommand(
            new \Phue\Command\Authenticate()
        );

        if ($response->username == $client->getUsername()) {
            echo "\n", "Authentication for user {$argv[2]} was successful!", "\n\n";

            exit(0);
        }
    } catch (\Phue\Transport\Exception\BridgeException $e) {
        if ($e->getCode() == 101) {
            echo ".";
        }
    }

    sleep(1);
}

echo "\n", "Failure to authenticate. Please try again!", "\n\n";

exit(1);